<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zm.news.mapper.UserMapper">

    <!--开启二级缓存,使用Ehcache缓存框架-->
    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

    <select id="findByPrimaryKey" resultType="com.zm.news.entity.User">
        select user_id, nickname, username, password, sex, age, role_id, address, user_status, remark
        from n_user where user_id = #{userId}
    </select>

    <select id="findByPrimaryKeyNotNull" resultType="com.zm.news.entity.User" flushCache="true">
        select user_id, nickname, user_status
        from n_user where user_id = #{userId}
    </select>

    <select id="findByUsername" parameterType="string" resultType="com.zm.news.entity.User">
        select user_id, nickname, username, password, sex, age, role_id, address, user_status, remark
        from n_user where username = #{username}
    </select>

    <select id="findByNickName" resultType="com.zm.news.entity.User">
        select user_id, nickname, username, password, sex, age, role_id, address, user_status, remark
        from n_user where nickname like concat(concat('%',#{nickName}, '%'))
    </select>

    <select id="findByUsernameAndPassword" resultType="com.zm.news.entity.User" flushCache="true">
        select user_id,username,nickname, role_id
        from n_user where username = #{param1} and password = #{param2}
    </select>

    <select id="findUserList" parameterType="User" resultType="com.zm.news.entity.User">
        select user_id, nickname, username, password, sex, age, role_id, address, user_status, remark
        from n_user
        <where>
            <if test="nickname != null and nickname != ''">
                and nickname like concat(concat('%',#{nickname},'%'))
            </if>
            <if test="sex != null and sex gte 0">
                and sex = #{sex}
            </if>
            <if test="address != null and address != ''">
                and address like concat(concat('%', #{address}, '%'))
            </if>
            <if test="roleId != null and roleId gte 0">
                and role_id = #{roleId}
            </if>
        </where>
    </select>

    <insert id="insertUser" parameterType="com.zm.news.entity.User">
        insert into n_user (nickname, username, password, sex, age, role_id, address, user_status, remark)
        values (#{nickname}, #{username}, #{password}, #{sex}, #{age}, #{roleId}, #{address}, #{userStatus}, #{remark})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.zm.news.entity.User" >
        update n_user
        <set>
            <if test="nickname != null and nickname != ''">
                nickname = #{nickname},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="age != null and age gt 0">
                age = #{age},
            </if>
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="userStatus != null">
                user_status = #{userStatus},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark}
            </if>
        </set>
        where user_id=#{userId}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="int">
        delete from n_user where user_id = #{userId}
    </delete>

    <delete id="deleteByPrimaryKeys" parameterType="arraylist">
        delete from n_user where user_id in
        <foreach collection="list" item="item" open="(" separator="，" close=")">
            #{item.userId}
        </foreach>
    </delete>

    <select id="getCount" resultType="int">
        select count(user_id)
        from n_user where user_status = 0
    </select>

</mapper>